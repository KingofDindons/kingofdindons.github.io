{"version":3,"sources":["./src/app/fight/fight-routing.module.ts","./src/app/fight/fight.module.ts","./src/app/fight/fight.page.ts","./src/app/services/websocket.service.ts","./src/app/fight/fight.page.scss","./src/app/fight/fight.page.html"],"names":[],"mappings":"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","file":"src_app_fight_fight_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { FightPage } from './fight.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: FightPage\r\n  },\r\n  {\r\n    path: 'searching',\r\n    loadChildren: () => import('./searching/searching.module').then( m => m.SearchingPageModule)\r\n  },\r\n  {\r\n    path: 'in-progress',\r\n    loadChildren: () => import('./in-progress/in-progress.module').then( m => m.InProgressPageModule)\r\n  },\r\n  {\r\n    path: 'result',\r\n    loadChildren: () => import('./result/result.module').then( m => m.ResultPageModule)\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class FightPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { FightPageRoutingModule } from './fight-routing.module';\r\n\r\nimport { FightPage } from './fight.page';\r\nimport { CustomComponentsModule } from '@app/custom-components/custom-components.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    FightPageRoutingModule,\r\n    CustomComponentsModule\r\n  ],\r\n  declarations: [FightPage]\r\n})\r\nexport class FightPageModule {}\r\n","import { Component, OnInit, Output } from '@angular/core';\r\nimport { AnimalUserService } from '@app/services/animaluser.service';\r\nimport { AnimalUser } from 'src/models/animaluser.model';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { StoreService } from '@app/store/store.service';\r\nimport { Router } from '@angular/router';\r\nimport { WebsocketService } from '@app/services/websocket.service';\r\n\r\n@Component({\r\n    selector: 'app-fight',\r\n    templateUrl: './fight.page.html',\r\n    styleUrls: ['./fight.page.scss'],\r\n})\r\nexport class FightPage implements OnInit {\r\n    @Output() pickingAnimal = new EventEmitter<AnimalUser>();\r\n\r\n    animals: AnimalUser[];\r\n    pickedAnimal: AnimalUser;\r\n\r\n    constructor(private animalUserService: AnimalUserService, private store: StoreService, private router: Router, private wsService: WebsocketService) {\r\n        this.animals = []\r\n        this.store.setinterval = true\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.animalUserService.getAllAnimals(this.store.username).subscribe(animals => this.animals = animals);\r\n    }\r\n\r\n    pickAnimal(id) {\r\n        this.store.fightingAnimalId = id;\r\n\r\n        this.wsService.connect();\r\n\r\n        let data = {\r\n            type: \"start\",\r\n            pseudo: this.store.username,\r\n            animalID: this.store.fightingAnimalId\r\n        }\r\n\r\n        // Data envoyées que la première fois, devraient être envoyé à chaque clic.\r\n        this.wsService.send(data);\r\n\r\n        this.wsService\r\n            .listen()\r\n            .subscribe(message => {\r\n                let json = JSON.parse(message);\r\n                if (json.type === \"OK\") {\r\n                    let data = {\r\n                        type: \"play\"\r\n                    }\r\n                    this.wsService.send(data);\r\n                }\r\n                if (json.type === \"playing\") {\r\n                    this.store.players = json.message\r\n                    this.router.navigate(['/fight/in-progress']);\r\n                }\r\n\r\n                console.log(message)\r\n            });\r\n\r\n        this.router.navigate(['/fight/searching']);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, Observer, ReplaySubject } from 'rxjs';\r\nimport { map, switchMap } from 'rxjs/operators';\r\n\r\nconst WS_SERVER_URL = 'ws://animaux-attraper-duel-light.herokuapp.com';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WebsocketService {\r\n\r\n  private ws: WebSocket;\r\n  // A ReplaySubject will emit its X latest values (1 in this case) each time\r\n  // its 'subscribe()' method is called\r\n  public ws$ = new ReplaySubject<WebSocket>(1);\r\n  \r\n\r\n  constructor() {\r\n  \r\n  };\r\n\r\n  public listen<T = any>(): Observable<T> {\r\n    // Only listen when the connection is opened\r\n\r\n    return this.ws$.pipe(\r\n      // Make an observable out of the websocket stream\r\n      switchMap(socket =>\r\n        new Observable((subscriber: Observer<MessageEvent<T>>) => {\r\n          // When a new message is received, the Observable will emit this message\r\n          socket.onmessage = message => subscriber.next(message);\r\n          // When a websocket error occurs, the Observable will emit a new error\r\n          socket.onerror = error => subscriber.error(error);\r\n          // When the websocket closes, the observable completes\r\n          socket.onclose = () => subscriber.complete();\r\n          // Function that will be called if the user manually unsubscribe\r\n          return () => socket.close();\r\n        })\r\n      ),\r\n      map((event: MessageEvent<T>) => event.data)\r\n      );\r\n  }\r\n\r\n  public send(data:unknown): void {\r\n    this.ws$.subscribe(socket => {\r\n      socket.send(JSON.stringify(data));\r\n    })\r\n  }\r\n\r\n  public connect(){\r\n    this.ws$.isStopped = false;\r\n    const socket = new WebSocket(WS_SERVER_URL);\r\n    socket.onopen = () => {\r\n      console.log('Successfully connected to the WebSocket at', WS_SERVER_URL);\r\n      // When the connection is done, emit the WebSocket instance\r\n      this.ws$.next(socket);\r\n    }\r\n    // Log all messages\r\n    socket.onmessage = message => console.log(message);\r\n  }\r\n\r\n\r\n  public disconnect(){\r\n    this.ws$.subscribe((socket)=> socket.close())\r\n    this.ws$.closed = true;\r\n    console.log(\"Status : \", this.ws$.isStopped);\r\n    this.ws$.isStopped = true;\r\n    console.log(\"Status : \", this.ws$.isStopped);\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJmaWdodC5wYWdlLnNjc3MifQ== */\";","export default \"<app-page-title [title]=\\\"'Choisissez votre combattant'\\\" [backUrl]=\\\"'home'\\\"></app-page-title>\\r\\n\\r\\n<ion-content [fullscreen]=\\\"true\\\" class=\\\"background-image\\\" padding>\\r\\n  <div *ngIf=\\\"animals.length > 0\\\">\\r\\n    <div *ngFor=\\\"let animal of animals; let i = index\\\">\\r\\n      <app-animal-button [animal]=\\\"animal\\\" [fight]=true (click)=\\\"pickAnimal(animal.id)\\\">{{animal}}</app-animal-button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"animals.length == 0\\\">\\r\\n    <h2 style=\\\"text-align: center; padding-bottom: 20px;\\\"><i>Vous n'avez aucun animal.</i></h2>\\r\\n    <ion-button size=\\\"large\\\" color=\\\"primary\\\" expand=\\\"block\\\" routerLink=\\\"/home\\\" >Retour au menu</ion-button>\\r\\n  </div>\\r\\n</ion-content>\";"],"sourceRoot":"webpack:///"}